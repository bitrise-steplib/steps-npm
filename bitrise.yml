format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - RELEASE_VERSION: 0.9.1
  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  test:
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    - script:
        title: Remove leftover _tmp folder
        inputs:
        - content: |
            #!/bin/bash
            rm -rf $ORIG_BITRISE_SOURCE_DIR/_tmp
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        title: checkout sample npm project
        inputs:
        - content: |
            #!/bin/bash
            git clone https://github.com/bitrise-samples/sample-apps-react-native-ios-and-android .
    - path::./:
        title: Test with system provided npm
        inputs:
        - command: install
        - cache_local_deps: true
    - script:
        title: Check if required files added to the cache env
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            if [[ $BITRISE_CACHE_INCLUDE_PATHS != *"$BITRISE_SOURCE_DIR/node_modules -> $BITRISE_SOURCE_DIR/package-lock.json"* ]]; then
                echo "cache path not present"
                exit 1
            fi
    - script:
        title: Generate npm version specifier into package.json
        inputs:
        - content: |
            #!/bin/bash
            # insert npm version specifier block into package.json
            mv package.json package.json.old
            awk '/SampleAppsReactNativeAndroid/{print "\"engines\":{\"npm\":\"6.0.0\"},"}1' package.json.old > package.json
            echo "generated package.json:"
            cat package.json
    - path::./:
        title: Test with fallback npm in package json
        inputs:
        - command: install
    - path::./:
        title: Test with user provided npm version
        inputs:
        - npm_version: 6.2.0
        - command: --version
        - workdir: .
    - script:
        title: Remove package.json 
        inputs:
        - content: |
            #!/bin/bash
            echo "removing package.json for testing purposes"
            rm package.json
    - path::./:
        title: Test with no package.json
        inputs:
        - command: install
    - change-workdir:
        title: Switch working dir to test
        run_if: true
        inputs:
        - path: $ORIG_BITRISE_SOURCE_DIR/test
    - path::./:
        title: Test with multiple arguments
        inputs:
        - command: run test-script --someswitch arg1 arg2 arg3
    - path::./:
        title: Test unsupported semver in package.json 
        inputs:
        - command: --version

  # ----------------------------------------------------------------
  # --- workflow to create Release version
  create-release:
    steps:
    - script:
        title:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u github.com/bitrise-tools/releaseman
            export CI=true
            releaseman create --version "$RELEASE_VERSION"

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - STEP_ID_IN_STEPLIB: npm
      - STEP_GIT_VERION_TAG_TO_SHARE: $RELEASE_VERSION
      - STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/steps-npm.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}
            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}
            bitrise share finish
